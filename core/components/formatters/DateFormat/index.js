/*
 * ---------------------------------------------------------------------------------------
 * ---------------------------------------------------------------------------------------
 *  IMPORTS
 * ---------------------------------------------------------------------------------------
 * ---------------------------------------------------------------------------------------
 */

// ----------------------------------------
// PACKAGE IMPORTS
// ----------------------------------------
import React, { Component } from "react";
import moment from "moment";




/*
 * ---------------------------------------------------------------------------------------
 * ---------------------------------------------------------------------------------------
 *  MAIN CLASS
 * ---------------------------------------------------------------------------------------
 * ---------------------------------------------------------------------------------------
 */
export default class DateFormat extends Component {

// ----------------------------------------
// ----------------------------------------
// CONSTRUCTOR AND LIFE CYCLES
// ----------------------------------------

  shouldComponentUpdate(nextProps, nextState) {
    if (this.props != nextProps) {
      return true;
    }

    return false;
  }


// ----------------------------------------
// ----------------------------------------
// MAIN METHODS
// ----------------------------------------

  format(value:number = 0, outputFormat:string = "DD MMM YYYY") {
    return moment(new Date(value))
      .format(outputFormat);
  }

// ----------------------------------------

  addFormat(stringFormat, value:string) {
    return stringFormat(value);
  }


// ----------------------------------------
// ----------------------------------------
// MAIN RENDER
// ----------------------------------------

  render() {
    const value = this.props.value ? this.props.value : 0;

    let formatted = this.format(value, this.props.patern);

    if (this.props.format) {
     formatted = this.addFormat(this.props.format, formatted);
    }

    return formatted;
  }


// ----------------------------------------

}
